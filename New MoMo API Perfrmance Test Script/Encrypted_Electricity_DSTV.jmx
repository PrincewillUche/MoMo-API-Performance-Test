<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - Electricity" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="payment quote (change trans ID in header before sending)/v1/paybillElectricity/paymentQuote-8" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;requestBody&quot;:&quot;o8d1mfzYqpczFUbwfwZjDe2Tj3X/H0vSmN+ZzvH210AcpGeUzK4bxv/4szm4dcxoaSlgQk7h0759dJdOiZY3QKWRu0HuXF54V1n4jWW3QLFLF9DmZU+5zN5h0+PdLJDgFKff5fFfNxUXjw7stfJw9T1iJs6oKzToe5VOH8bQxT9DXNyr0kNZkne6olao0oUpDrfQ9agmVEyVps+hSjeKQ3+MsCDvF85HOW+LKfJwMsdkNksTESGtySn19tkBb131Hr3+yv+pW/HtBLz3+HH2jZ8WX/hthvfzYII+x1tZ614tp6ldlwsqi2rmXR+NKGiI0pCeESrf8lhexjQVM6TtR2fYmmnxZRgZVuEeCBRGDImLe0OjC54O5HVFq0DCJns7FmrsPsaww8I+ibx9F8WJe1jOMH+PHzuHWiIvbY0ZVyNSdxuPEZENj1fnbvLw04ea15stOrgmudnR+YpFyeQm3NlpHohEYhiRNXLU1EZJHuPNVeCYwBEDOrWd7t+LXZsTfhkbSMuOuUPFufh/ia/L5zGzSWANBuQFeDA/1DXTRvsfIB7+jyNopPseC0aXibFHsU0dhqB1npQALaOVkgVt1zUOyv8EUrvzrmcqYanoLjtqENCkaZEIqAXzX7SzYsCikqoRE/KTduqOvZFk0dtzKutI/c6cHiQX+ELwSaSTnF3PlkIByp7VPMtHih2iMyqsFJ6KMUpRZOhuel7xuoVOfeqxxH7kNtx0oyIKeKnJl4s=&quot;&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">momongapp.mtn.ng</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/paybillElectricity/paymentQuote</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InJibkxaMy1PM1BPd09pQ3JTOXJBcSJ9.eyJodHRwczovL215bXRuLmNvbS9sb2dpbkNvdW50IjoyNywiaHR0cHM6Ly9teW10bi5jb20vdXNlck1ldGFEYXRhIjp7Imt5YyI6eyJkYXRlT2ZCaXJ0aCI6IjE5ODYwNzI5IiwiZ2VuZGVyIjoiTSIsImZpcnN0TmFtZSI6IkxBTUlOQVJBWUFOQVNXQU1ZIiwibGFzdE5hbWUiOiJUSEFNTUFSQVBVIiwibmF0aW9uYWxpdHkiOiJJTkQiLCJwaG9uZU51bWJlciI6IjgxNjY2MzUyNTUifSwiZmlyc3RfbmFtZSI6IkxBTUlOQVJBWUFOQVNXQU1ZIiwibXNpc2RuIjoiMjM0ODE2NjYzNTI1NSIsIm5pY2tfbmFtZSI6IkxheG1hbiIsInRlcm1zX2FjY2VwdGVkIjoidHJ1ZSIsImludGVyc3RpdGlhbF9kYXRlIjoiMjAyMzA3MjQiLCJsaW5rZWROdW1iZXIiOiIrMjM0ODE2Njg0ODU1NiIsImxpbmtlZE51bWJlclN0YXR1cyI6ZmFsc2UsImJpbyI6IiIsInBpYyI6Imh0dHBzOi8vbWFnZW50b2Vjb21tZXJjZXByb2QubXRubmlnZXJpYS5uZXQvbWVkaWEvbXRuL3Byb2ZpbGUvaW1nXzE2ODYwNTk3MTEuanBnIiwidG91ckFwcERpc3BsYXkiOmZhbHNlfSwiaHR0cHM6Ly9teW10bi5jb20vc2Vjb25kYXJ5UHJvZmlsZSI6W3sidXNlcl9pZCI6IjY0NzVlNDFiODYyOWMyMjAwOTZlMjZhZCIsInByb3ZpZGVyIjoic21zIiwiY29ubmVjdGlvbiI6InNtcyIsImlzU29jaWFsIjpmYWxzZX1dLCJodHRwczovL215bXRuLmNvbS9waG9uZV9udW1iZXIiOiIrMjM0ODE2NjYzNTI1NSIsImlzcyI6Imh0dHBzOi8vYXV0aC5tdG5vbmxpbmUuY29tLyIsInN1YiI6InNtc3w2NDc1ZTQxYjg2MjljMjIwMDk2ZTI2YWQiLCJhdWQiOlsiTmV4dEdlbkFQSSIsImh0dHBzOi8vbXRubmctcHJvZC5tdG4uYXV0aDAuY29tL3VzZXJpbmZvIl0sImlhdCI6MTY5MDg4NjU0MiwiZXhwIjoxNjkwODkwMTQyLCJhenAiOiJXTzVCYlR5RVdMU0Z2RlB3NVRzWW9pb1RRcWNxOE1xMyIsInNjb3BlIjoib3BlbmlkIHByb2ZpbGUgZW1haWwgb2ZmbGluZV9hY2Nlc3MiLCJndHkiOiJwYXNzd29yZCJ9.Lv43JqyK8hKsOcp-60ptNw4B2TbTVBhtK7wVRbScs9QSVIdsHIHcfy3m-y0MwskEn151P3senl7v6ugdgq-MD0Y9XN292rNLwsHuNlBSTzphl-c43Gz6kzt185O34r6FdAEDCfN293TCatAR2kOwGb7-L63e0HA0RCTsNbyElhQHAGSFU7WxB10Ym9umdqrWGDNa6EHow_eFPq4tTov5pZWXpY5mQng8knRl1p9xSXhCaUS9TqUxKgGtMtWkdjz6eUx8rfJVEfvqBH0TfqjuowsMoS54tGL3pG9cXTtFEuQqh-FGrXrE6xtynbHuXXN7rYHvOfO-6fWu0nZS__wrGA</stringProp>
                </elementProp>
                <elementProp name="ignoreexpirycheck" elementType="Header">
                  <stringProp name="Header.name">ignoreexpirycheck</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="Postman-Token" elementType="Header">
                  <stringProp name="Header.name">Postman-Token</stringProp>
                  <stringProp name="Header.value">168d578c-7df8-4401-a76b-2d6923619ffc</stringProp>
                </elementProp>
                <elementProp name="channel" elementType="Header">
                  <stringProp name="Header.name">channel</stringProp>
                  <stringProp name="Header.value">MTNAPPNXG</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">PostmanRuntime/7.33.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">transactionId</stringProp>
                  <stringProp name="Header.value">${__RandomString(23,1234567809,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">dataQuote</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Decrypt (with data response from payment quote)/v1/aes/decrypt-9" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;requestBody&quot;: &quot;${dataQuote}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">momongapp.mtn.ng</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/aes/decrypt</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Postman-Token" elementType="Header">
                  <stringProp name="Header.name">Postman-Token</stringProp>
                  <stringProp name="Header.value">224b63cf-9335-492e-9b0f-a33ec4f3da79</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">PostmanRuntime/7.33.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">QuoteId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.quoteId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Encrypt (with payload containing quote id of decryption request)/v1/aes/encrypt-10" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request</stringProp>
                  <stringProp name="Argument.value">{     &quot;sendingFri&quot;: &quot;2349132059669&quot;,     &quot;receivingFri&quot;: &quot;04042404139&quot;,     &quot;amount&quot;: {         &quot;amount&quot;: &quot;160&quot;,         &quot;currency&quot;: &quot;NGN&quot;     },     &quot;sendernote&quot;: &quot;ELECTRICITYPAYMENTCAPRICORN:2349132059669:160:2023-08-25:12345678990:PREPAID:NP NGEMA&quot;,     &quot;receivermessage&quot;: &quot;ELECTRICITYPAYMENTCAPRICORN:2349132059669:160:2023-08-25:12345678990:PREPAID:NP NGEMA&quot;,     &quot;extension&quot;: {         &quot;packageName&quot;: &quot;aedc&quot;,         &quot;additionalInfo&quot;: &quot;PREPAID&quot;,         &quot;customermsisdn&quot;: &quot;2349132059669&quot;     },     &quot;quoteId&quot;: &quot;${QuoteId}&quot;,     &quot;includeSenderCharges&quot;: false }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">momongapp.mtn.ng</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/aes/encrypt</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Postman-Token" elementType="Header">
                  <stringProp name="Header.name">Postman-Token</stringProp>
                  <stringProp name="Header.value">2b709a77-eceb-4cc1-9c80-b97742d8ea96</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">PostmanRuntime/7.33.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ResponseValue</stringProp>
              <stringProp name="RegexExtractor.regex">(.*)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Payment (with response from encrypt and change Trans Id in header before sending )/v1/paybillElectricity/payment-12" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;requestBody&quot;: &quot;${ResponseValue}&quot;&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">momongapp.mtn.ng</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/paybillElectricity/payment</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Postman-Token" elementType="Header">
                  <stringProp name="Header.name">Postman-Token</stringProp>
                  <stringProp name="Header.value">a43e9908-7aac-4951-ba24-09725329c876</stringProp>
                </elementProp>
                <elementProp name="channel" elementType="Header">
                  <stringProp name="Header.name">channel</stringProp>
                  <stringProp name="Header.value">MTNAPPNXG</stringProp>
                </elementProp>
                <elementProp name="transactionId" elementType="Header">
                  <stringProp name="Header.name">transactionId</stringProp>
                  <stringProp name="Header.value">${__RandomString(23,1234567809,)}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InJibkxaMy1PM1BPd09pQ3JTOXJBcSJ9.eyJodHRwczovL215bXRuLmNvbS9sb2dpbkNvdW50IjoyNywiaHR0cHM6Ly9teW10bi5jb20vdXNlck1ldGFEYXRhIjp7Imt5YyI6eyJkYXRlT2ZCaXJ0aCI6IjE5ODYwNzI5IiwiZ2VuZGVyIjoiTSIsImZpcnN0TmFtZSI6IkxBTUlOQVJBWUFOQVNXQU1ZIiwibGFzdE5hbWUiOiJUSEFNTUFSQVBVIiwibmF0aW9uYWxpdHkiOiJJTkQiLCJwaG9uZU51bWJlciI6IjgxNjY2MzUyNTUifSwiZmlyc3RfbmFtZSI6IkxBTUlOQVJBWUFOQVNXQU1ZIiwibXNpc2RuIjoiMjM0ODE2NjYzNTI1NSIsIm5pY2tfbmFtZSI6IkxheG1hbiIsInRlcm1zX2FjY2VwdGVkIjoidHJ1ZSIsImludGVyc3RpdGlhbF9kYXRlIjoiMjAyMzA3MjQiLCJsaW5rZWROdW1iZXIiOiIrMjM0ODE2Njg0ODU1NiIsImxpbmtlZE51bWJlclN0YXR1cyI6ZmFsc2UsImJpbyI6IiIsInBpYyI6Imh0dHBzOi8vbWFnZW50b2Vjb21tZXJjZXByb2QubXRubmlnZXJpYS5uZXQvbWVkaWEvbXRuL3Byb2ZpbGUvaW1nXzE2ODYwNTk3MTEuanBnIiwidG91ckFwcERpc3BsYXkiOmZhbHNlfSwiaHR0cHM6Ly9teW10bi5jb20vc2Vjb25kYXJ5UHJvZmlsZSI6W3sidXNlcl9pZCI6IjY0NzVlNDFiODYyOWMyMjAwOTZlMjZhZCIsInByb3ZpZGVyIjoic21zIiwiY29ubmVjdGlvbiI6InNtcyIsImlzU29jaWFsIjpmYWxzZX1dLCJodHRwczovL215bXRuLmNvbS9waG9uZV9udW1iZXIiOiIrMjM0ODE2NjYzNTI1NSIsImlzcyI6Imh0dHBzOi8vYXV0aC5tdG5vbmxpbmUuY29tLyIsInN1YiI6InNtc3w2NDc1ZTQxYjg2MjljMjIwMDk2ZTI2YWQiLCJhdWQiOlsiTmV4dEdlbkFQSSIsImh0dHBzOi8vbXRubmctcHJvZC5tdG4uYXV0aDAuY29tL3VzZXJpbmZvIl0sImlhdCI6MTY5MDg4NjU0MiwiZXhwIjoxNjkwODkwMTQyLCJhenAiOiJXTzVCYlR5RVdMU0Z2RlB3NVRzWW9pb1RRcWNxOE1xMyIsInNjb3BlIjoib3BlbmlkIHByb2ZpbGUgZW1haWwgb2ZmbGluZV9hY2Nlc3MiLCJndHkiOiJwYXNzd29yZCJ9.Lv43JqyK8hKsOcp-60ptNw4B2TbTVBhtK7wVRbScs9QSVIdsHIHcfy3m-y0MwskEn151P3senl7v6ugdgq-MD0Y9XN292rNLwsHuNlBSTzphl-c43Gz6kzt185O34r6FdAEDCfN293TCatAR2kOwGb7-L63e0HA0RCTsNbyElhQHAGSFU7WxB10Ym9umdqrWGDNa6EHow_eFPq4tTov5pZWXpY5mQng8knRl1p9xSXhCaUS9TqUxKgGtMtWkdjz6eUx8rfJVEfvqBH0TfqjuowsMoS54tGL3pG9cXTtFEuQqh-FGrXrE6xtynbHuXXN7rYHvOfO-6fWu0nZS__wrGA</stringProp>
                </elementProp>
                <elementProp name="pin" elementType="Header">
                  <stringProp name="Header.name">pin</stringProp>
                  <stringProp name="Header.value">0823</stringProp>
                </elementProp>
                <elementProp name="ignoreexpirycheck" elementType="Header">
                  <stringProp name="Header.name">ignoreexpirycheck</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">PostmanRuntime/7.33.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group -DSTV" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Payment Quote/v1/paybillDstv/paymentQuote-13" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;requestBody&quot;: &quot;o8d1mfzYqpczFUbwfwZjDe2Tj3X/H0vSmN+ZzvH210AcpGeUzK4bxv/4szm4dcxoY3axbMc/aUHV1A/TMIPgeZhnjcLHbKA5vDM1y1EbMkzuLPMULEAjIf4CCXxuTK3Ps+XyqI2QJ+wN6Ay2gCJKP23cnSTsup3Z7OfUKNhj3f7JvQ5MOyMp1f/AF1GPVDl8OauffzGckTBTtTCyS7KJegRtaD8CcpT/g6VlxPQ6O7cfi3M253C60V+wXdBuxryZNMf0etzQpk6hjAf2TCKxwK+o60wTenzpMsAaZi81VBblSteb/3XKNy/957PC35PFu7FMurxEos69kYHBC+P9+/bEOZ5OcQ7vDCmKYKEF2zxVlZtBKVrKTOz+TzodtlRj&quot;&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">momongapp.mtn.ng</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/paybillDstv/paymentQuote</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InJibkxaMy1PM1BPd09pQ3JTOXJBcSJ9.eyJodHRwczovL215bXRuLmNvbS9sb2dpbkNvdW50IjoyNywiaHR0cHM6Ly9teW10bi5jb20vdXNlck1ldGFEYXRhIjp7Imt5YyI6eyJkYXRlT2ZCaXJ0aCI6IjE5ODYwNzI5IiwiZ2VuZGVyIjoiTSIsImZpcnN0TmFtZSI6IkxBTUlOQVJBWUFOQVNXQU1ZIiwibGFzdE5hbWUiOiJUSEFNTUFSQVBVIiwibmF0aW9uYWxpdHkiOiJJTkQiLCJwaG9uZU51bWJlciI6IjgxNjY2MzUyNTUifSwiZmlyc3RfbmFtZSI6IkxBTUlOQVJBWUFOQVNXQU1ZIiwibXNpc2RuIjoiMjM0ODE2NjYzNTI1NSIsIm5pY2tfbmFtZSI6IkxheG1hbiIsInRlcm1zX2FjY2VwdGVkIjoidHJ1ZSIsImludGVyc3RpdGlhbF9kYXRlIjoiMjAyMzA3MjQiLCJsaW5rZWROdW1iZXIiOiIrMjM0ODE2Njg0ODU1NiIsImxpbmtlZE51bWJlclN0YXR1cyI6ZmFsc2UsImJpbyI6IiIsInBpYyI6Imh0dHBzOi8vbWFnZW50b2Vjb21tZXJjZXByb2QubXRubmlnZXJpYS5uZXQvbWVkaWEvbXRuL3Byb2ZpbGUvaW1nXzE2ODYwNTk3MTEuanBnIiwidG91ckFwcERpc3BsYXkiOmZhbHNlfSwiaHR0cHM6Ly9teW10bi5jb20vc2Vjb25kYXJ5UHJvZmlsZSI6W3sidXNlcl9pZCI6IjY0NzVlNDFiODYyOWMyMjAwOTZlMjZhZCIsInByb3ZpZGVyIjoic21zIiwiY29ubmVjdGlvbiI6InNtcyIsImlzU29jaWFsIjpmYWxzZX1dLCJodHRwczovL215bXRuLmNvbS9waG9uZV9udW1iZXIiOiIrMjM0ODE2NjYzNTI1NSIsImlzcyI6Imh0dHBzOi8vYXV0aC5tdG5vbmxpbmUuY29tLyIsInN1YiI6InNtc3w2NDc1ZTQxYjg2MjljMjIwMDk2ZTI2YWQiLCJhdWQiOlsiTmV4dEdlbkFQSSIsImh0dHBzOi8vbXRubmctcHJvZC5tdG4uYXV0aDAuY29tL3VzZXJpbmZvIl0sImlhdCI6MTY5MDg4NjU0MiwiZXhwIjoxNjkwODkwMTQyLCJhenAiOiJXTzVCYlR5RVdMU0Z2RlB3NVRzWW9pb1RRcWNxOE1xMyIsInNjb3BlIjoib3BlbmlkIHByb2ZpbGUgZW1haWwgb2ZmbGluZV9hY2Nlc3MiLCJndHkiOiJwYXNzd29yZCJ9.Lv43JqyK8hKsOcp-60ptNw4B2TbTVBhtK7wVRbScs9QSVIdsHIHcfy3m-y0MwskEn151P3senl7v6ugdgq-MD0Y9XN292rNLwsHuNlBSTzphl-c43Gz6kzt185O34r6FdAEDCfN293TCatAR2kOwGb7-L63e0HA0RCTsNbyElhQHAGSFU7WxB10Ym9umdqrWGDNa6EHow_eFPq4tTov5pZWXpY5mQng8knRl1p9xSXhCaUS9TqUxKgGtMtWkdjz6eUx8rfJVEfvqBH0TfqjuowsMoS54tGL3pG9cXTtFEuQqh-FGrXrE6xtynbHuXXN7rYHvOfO-6fWu0nZS__wrGA</stringProp>
                </elementProp>
                <elementProp name="ignoreexpirycheck" elementType="Header">
                  <stringProp name="Header.name">ignoreexpirycheck</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="Postman-Token" elementType="Header">
                  <stringProp name="Header.name">Postman-Token</stringProp>
                  <stringProp name="Header.value">c0ab3794-f705-4227-8c1f-b7a82f4cc1a9</stringProp>
                </elementProp>
                <elementProp name="channel" elementType="Header">
                  <stringProp name="Header.name">channel</stringProp>
                  <stringProp name="Header.value">MTNAPPNXG</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="transactionId" elementType="Header">
                  <stringProp name="Header.name">transactionId</stringProp>
                  <stringProp name="Header.value">${__RandomString(23,1234567809,)}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">PostmanRuntime/7.33.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">dataQuote2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Decrypt/v1/aes/decrypt-14" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;requestBody&quot;: &quot;${dataQuote2}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">momongapp.mtn.ng</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/aes/decrypt</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Postman-Token" elementType="Header">
                  <stringProp name="Header.name">Postman-Token</stringProp>
                  <stringProp name="Header.value">3fdc0add-7e6a-4a8c-a635-3bface480711</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">PostmanRuntime/7.33.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">QuoteId2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.quoteId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="encrypt/v1/aes/encrypt-15" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">request</stringProp>
                  <stringProp name="Argument.value">{     &quot;sendingFri&quot;: &quot;2349132059669&quot;,     &quot;receivingFri&quot;: &quot;8061035624&quot;,     &quot;amount&quot;: {         &quot;amount&quot;: &quot;160&quot;,         &quot;currency&quot;: &quot;NGN&quot;     },     &quot;extension&quot;: {         &quot;packageName&quot;: &quot;COMPLE36&quot;,         &quot;beneficiaryName&quot;: &quot;Sten Mockett&quot;     },     &quot;quoteId&quot;: &quot;${QuoteId2}&quot;,     &quot;includeSenderCharges&quot;: false }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">momongapp.mtn.ng</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/aes/encrypt</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Postman-Token" elementType="Header">
                  <stringProp name="Header.name">Postman-Token</stringProp>
                  <stringProp name="Header.value">7d3f8efb-d0ae-4ec1-a0d0-c7adbab0f90d</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">PostmanRuntime/7.33.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ResponseValue2</stringProp>
              <stringProp name="RegexExtractor.regex">(.*)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Payment/v1/paybillDstv/payment-16" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;requestBody&quot;: &quot;${ResponseValue2}&quot;&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">momongapp.mtn.ng</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/paybillDstv/payment</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Postman-Token" elementType="Header">
                  <stringProp name="Header.name">Postman-Token</stringProp>
                  <stringProp name="Header.value">9ae2e754-e1f5-4e36-9745-bc334fc85d9d</stringProp>
                </elementProp>
                <elementProp name="channel" elementType="Header">
                  <stringProp name="Header.name">channel</stringProp>
                  <stringProp name="Header.value">MTNAPPNXG</stringProp>
                </elementProp>
                <elementProp name="transactionId" elementType="Header">
                  <stringProp name="Header.name">transactionId</stringProp>
                  <stringProp name="Header.value">${__RandomString(23,1234567809,)}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InJibkxaMy1PM1BPd09pQ3JTOXJBcSJ9.eyJodHRwczovL215bXRuLmNvbS9sb2dpbkNvdW50IjoyNywiaHR0cHM6Ly9teW10bi5jb20vdXNlck1ldGFEYXRhIjp7Imt5YyI6eyJkYXRlT2ZCaXJ0aCI6IjE5ODYwNzI5IiwiZ2VuZGVyIjoiTSIsImZpcnN0TmFtZSI6IkxBTUlOQVJBWUFOQVNXQU1ZIiwibGFzdE5hbWUiOiJUSEFNTUFSQVBVIiwibmF0aW9uYWxpdHkiOiJJTkQiLCJwaG9uZU51bWJlciI6IjgxNjY2MzUyNTUifSwiZmlyc3RfbmFtZSI6IkxBTUlOQVJBWUFOQVNXQU1ZIiwibXNpc2RuIjoiMjM0ODE2NjYzNTI1NSIsIm5pY2tfbmFtZSI6IkxheG1hbiIsInRlcm1zX2FjY2VwdGVkIjoidHJ1ZSIsImludGVyc3RpdGlhbF9kYXRlIjoiMjAyMzA3MjQiLCJsaW5rZWROdW1iZXIiOiIrMjM0ODE2Njg0ODU1NiIsImxpbmtlZE51bWJlclN0YXR1cyI6ZmFsc2UsImJpbyI6IiIsInBpYyI6Imh0dHBzOi8vbWFnZW50b2Vjb21tZXJjZXByb2QubXRubmlnZXJpYS5uZXQvbWVkaWEvbXRuL3Byb2ZpbGUvaW1nXzE2ODYwNTk3MTEuanBnIiwidG91ckFwcERpc3BsYXkiOmZhbHNlfSwiaHR0cHM6Ly9teW10bi5jb20vc2Vjb25kYXJ5UHJvZmlsZSI6W3sidXNlcl9pZCI6IjY0NzVlNDFiODYyOWMyMjAwOTZlMjZhZCIsInByb3ZpZGVyIjoic21zIiwiY29ubmVjdGlvbiI6InNtcyIsImlzU29jaWFsIjpmYWxzZX1dLCJodHRwczovL215bXRuLmNvbS9waG9uZV9udW1iZXIiOiIrMjM0ODE2NjYzNTI1NSIsImlzcyI6Imh0dHBzOi8vYXV0aC5tdG5vbmxpbmUuY29tLyIsInN1YiI6InNtc3w2NDc1ZTQxYjg2MjljMjIwMDk2ZTI2YWQiLCJhdWQiOlsiTmV4dEdlbkFQSSIsImh0dHBzOi8vbXRubmctcHJvZC5tdG4uYXV0aDAuY29tL3VzZXJpbmZvIl0sImlhdCI6MTY5MDg4NjU0MiwiZXhwIjoxNjkwODkwMTQyLCJhenAiOiJXTzVCYlR5RVdMU0Z2RlB3NVRzWW9pb1RRcWNxOE1xMyIsInNjb3BlIjoib3BlbmlkIHByb2ZpbGUgZW1haWwgb2ZmbGluZV9hY2Nlc3MiLCJndHkiOiJwYXNzd29yZCJ9.Lv43JqyK8hKsOcp-60ptNw4B2TbTVBhtK7wVRbScs9QSVIdsHIHcfy3m-y0MwskEn151P3senl7v6ugdgq-MD0Y9XN292rNLwsHuNlBSTzphl-c43Gz6kzt185O34r6FdAEDCfN293TCatAR2kOwGb7-L63e0HA0RCTsNbyElhQHAGSFU7WxB10Ym9umdqrWGDNa6EHow_eFPq4tTov5pZWXpY5mQng8knRl1p9xSXhCaUS9TqUxKgGtMtWkdjz6eUx8rfJVEfvqBH0TfqjuowsMoS54tGL3pG9cXTtFEuQqh-FGrXrE6xtynbHuXXN7rYHvOfO-6fWu0nZS__wrGA</stringProp>
                </elementProp>
                <elementProp name="pin" elementType="Header">
                  <stringProp name="Header.name">pin</stringProp>
                  <stringProp name="Header.value">0823</stringProp>
                </elementProp>
                <elementProp name="ignoreexpirycheck" elementType="Header">
                  <stringProp name="Header.name">ignoreexpirycheck</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">PostmanRuntime/7.33.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
